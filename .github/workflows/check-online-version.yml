name: "Check Online Version"
on:
  watch: # star
  workflow_dispatch:
  schedule:
  - cron: "0 0 * * *"
env:
  PANEL_PROJECT_NAME: pterodactyl-panel   # Dockerhub project, can be overriden by a repo secret by the same name
  DAEMON_PROJECT_NAME: pterodactyl-daemon # Dockerhub project, can be overriden by a repo secret by the same name

jobs:
  get_versions:
    name: Get Versions
    runs-on: ubuntu-latest
    outputs:
      current_panel_version: ${{ steps.panel_docker_version.outputs.version }}
      current_daemon_version: ${{ steps.daemon_docker_version.outputs.version }}
      latest_panel_version: ${{ steps.latest_versions.outputs.panel_version }}
      latest_daemon_version: ${{ steps.latest_versions.outputs.daemon_version }}
    steps:
    - env:
        project_name: ${{ secrets.PANEL_PROJECT_NAME }}
      if: env.project_name != null
      run: echo "PANEL_PROJECT_NAME=${{ env.project_name }} >> $GITHUB_ENV
      
    - env:
        project_name: ${{ secrets.DAMEON_PROJECT_NAME }}
      if: env.project_name != null
      run: echo "DAEMON_PROJECT_NAME=${{ env.project_name }} >> $GITHUB_ENV

    - name: Get Panel Version
      id: get_panel_version
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: pterodactyl/panel
        
    - name: Get Daemon Version
      id: get_daemon_version
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: pterodactyl/wings
      
    - name: Get Current Release
      id: latest_versions
      run: |
        echo "::set-output name=panel_version::${{ steps.get_panel_version.outputs.release }}"
        echo "::set-output name=daemon_version::${{ steps.get_daemon_version.outputs.release }}"

    - name: Get Panel Docker version
      uses: luoqiz/docker-images-latest-version@master
      id: panel_docker_version
      with:
        image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PANEL_PROJECT_NAME }}

    - name: Get Daemon Docker version
      uses: luoqiz/docker-images-latest-version@master
      id: daemon_docker_version
      with:
        image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DAEMON_PROJECT_NAME }}
  
  request_daemon_build:
    name: Request Daemon Build
    runs-on: ubuntu-latest
    needs:
    - get_versions
    steps:
    - run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> $GITHUB_ENV
      id: repo-name
      shell: bash
    - uses: convictional/trigger-workflow-and-wait@v1.4.0
      with:
        owner: ${{ github.repository_owner }}
        repo: ${{ env.REPOSITORY_NAME }}
        github_token: ${{ secrets.WORKFLOW_TOKEN }}
        workflow_file_name: update-daemon.yml
        ref: master
        trigger_workflow: true
        wait_workflow: false
        inputs: '{
          "version":"${{ needs.get_versions.outputs.latest_daemon_version }}",
          "dockerhub_package":"${{ env.PANEL_PROJECT_NAME }}"
          }'

  request_panel_build:
    name: Request Panel Build
    runs-on: ubuntu-latest
    needs:
    - get_versions
    steps:
    - run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> $GITHUB_ENV
      id: repo-name
      shell: bash
    - uses: convictional/trigger-workflow-and-wait@v1.4.0
      with:
        owner: ${{ github.repository_owner }}
        repo: ${{ env.REPOSITORY_NAME }}
        github_token: ${{ secrets.WORKFLOW_TOKEN }}
        workflow_file_name: update-panel.yml
        ref: master
        trigger_workflow: true
        wait_workflow: false
        inputs: '{
          "version":"${{ needs.get_versions.outputs.latest_panel_version }}",
          "dockerhub_package":"${{ env.DAEMON_PROJECT_NAME }}"
          }'